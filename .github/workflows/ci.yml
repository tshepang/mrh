name: CI
on:
  - push
  - pull_request
jobs:
  build:
    name: ${{ matrix.os }} (${{ matrix.rust }})
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        rust:
          - 1.74.0
          - stable
        # https://github.com/actions/virtual-environments#available-images
        os:
          - macOS-13 # x86
          - macOS-14 # arm
          - macOS-14-large # x86
          - ubuntu-20.04
          - ubuntu-22.04
          - ubuntu-24.04
          - windows-2019
          - windows-2022
    steps:

    - uses: actions/checkout@v3

    - name: Install ${{ matrix.rust }} toolchain
      uses: dtolnay/rust-toolchain@master
      with:
          toolchain: ${{ matrix.rust }}

    - name: Build (with no features)
      run: cargo build --no-default-features

    - name: Build
      run: cargo build

    - name: Build (with "json" feature)
      run: cargo build --features json

  # https://doc.rust-lang.org/nightly/cargo/guide/continuous-integration.html#verifying-latest-dependencies
  latest_deps:
    name: Latest Dependencies
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      CARGO_RESOLVER_INCOMPATIBLE_RUST_VERSIONS: allow
    steps:
      - uses: actions/checkout@v4
      - run: rustup update stable && rustup default stable
      - run: cargo update --verbose
      - run: cargo build --verbose
      - run: cargo build --verbose --features json
      - run: cargo build --verbose --no-default-features

  security-audit:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: rustsec/audit-check@v1.4.1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
